name: Snyk Scan

on: workflow_dispatch

jobs:
  snyk-sca:
    name: Snyk SCA Scan
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
          fetch-depth: 0  # Fetch full history instead of a single commit
          ref: ${{ github.sha }}  # Checkout the specific commit that triggered the push
          token: ${{ secrets.GITHUB_TOKEN }}

    - uses: actions/setup-node@v4
      with:
          node-version: '20'

    # Uncomment the following steps if necessary for your project dependencies
    # - name: Install libicu dependency
    #   run: |
    #       dnf install -y libicu

    # - name: Setup .NET
    #   uses: actions/setup-dotnet@v3
    #   with:
    #       dotnet-version: '8.0.x'

    # - name: Restore dependencies
    #   run: |
    #       find . -name "*.csproj" -regextype egrep -and -not -regex ".*(T|t)est.*|.*(S|s)imulat.*|.*node_modules.*|.*sample.*|.*code-generators.*|.*(A|a)utomat.*" -exec sh -c 'dotnet restore "$0"' {} \;

    - name: Install Snyk CLI
      run: |
        curl -Lo ./snyk https://static.snyk.io/cli/latest/snyk-linux
        chmod +x ./snyk
        mv ./snyk /usr/local/bin/

    - name: Install snyk-to-html
      run: |
        curl -Lo ./snyk-to-html https://github.com/snyk/snyk-to-html/releases/latest/download/snyk-to-html-linux
        chmod +x ./snyk-to-html
        mv ./snyk-to-html /usr/local/bin/

    - name: SNYK auth
      run: |
        snyk auth ${{secrets.SNYK_API_TOKEN}}

    - name: Install snyk-delta
      run: |
        curl -Lo ./snyk-delta https://github.com/snyk-labs/snyk-delta/releases/latest/download/snyk-delta-linux
        chmod +x ./snyk-delta
        mv ./snyk-delta /usr/local/bin/

    - name: Run Snyk Delta on Changed Files
      run: |
        # Get the previous commit hash
        PREVIOUS_COMMIT=$(git rev-parse HEAD^1 2>/dev/null || echo "")
        if [ -z "$PREVIOUS_COMMIT" ]; then
          echo "No previous commit found. This might be the first commit in the branch."
          echo "Skipping Snyk Delta analysis."
          exit 0
        fi
        echo "Previous Commit: $PREVIOUS_COMMIT"
    
        # Get the list of modified files since the previous commit
        git diff --name-only "$PREVIOUS_COMMIT" HEAD > changed_files.txt
        if [ $? -ne 0 ]; then
          echo "Error: Failed to retrieve the list of changed files."
          exit 1
        fi
    
        # Filter for relevant files
        grep -E '\.(csproj|sln|lock|json)$' changed_files.txt > relevant_changed_files.txt
        if [ $? -ne 0 ]; then
          echo "Error: Failed to filter relevant files."
          exit 1
        fi
    
        if [ -s "relevant_changed_files.txt" ]; then
          echo "Running Snyk Delta on the following relevant files:"
          cat relevant_changed_files.txt
          
          errors=0
          while IFS= read -r file; do
            echo "Scanning delta for: $file"
            snyk delta --file="$file" --org=*** --base="$PREVIOUS_COMMIT" HEAD
            exit_code=$?
            if [ $exit_code -ne 0 ]; then
              echo "Error: Snyk Delta encountered an issue for $file."
              errors=$((errors + 1))
            fi
          done < "relevant_changed_files.txt"
    
          if [ $errors -ne 0 ]; then
            echo "Snyk Delta encountered issues with $errors file(s)."
            exit 1
          else
            echo "Snyk Delta analysis completed successfully."
          fi
        else
          echo "No relevant files changed in this push for Snyk Delta analysis."
        fi


          

