name: Snyk Scan


#on: workflow_dispatch
on: 
  workflow_dispatch:
  push:
    branches:
      - 'feature/snyk-test'

jobs:
  snyk-sca:
    name: Snyk SCA Scan
    runs-on: arc-enterprise-medium
    container: oraclelinux:8

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
          repository: dotnet-mixed-manifests
          ref: ${{ github.sha }} # Checkout the specific commit that triggered the push
          token: ${{ SNYK_API_TOKEN }}
          #path: instrument-software

    - uses: actions/setup-node@v4
      with:
          node-version: '20'

    - name: Install libicu dependency
      run: |
        dnf install -y libicu

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'

    - name: Restore dependencies
      run: |
          find . -name "*.csproj" -regextype egrep -and -not -regex ".*(T|t)est.*|.*(S|s)imulat.*|.*node_modules.*|.*sample.*|.*code-generators.*|.*(A|a)utomat.*" -exec sh -c 'dotnet restore "$0" --use-lock-file' {} \;

    - name: Install Snyk CLI
      run: |
        curl -Lo ./snyk https://static.snyk.io/cli/latest/snyk-linux
        chmod +x ./snyk
        mv ./snyk /usr/local/bin/

    - name: Install snyk-to-html
      run: |
        curl -Lo ./snyk-to-html https://github.com/snyk/snyk-to-html/releases/latest/download/snyk-to-html-linux
        chmod +x ./snyk-to-html
        mv ./snyk-to-html /usr/local/bin/

    - name: SNYK auth
      run: |
        snyk auth ${{secrets.SNYK_API_TOKEN}}


    - name: Install snyk-delta
      run: |
        curl -Lo ./snyk-delta https://github.com/snyk-labs/snyk-delta/releases/latest/download/snyk-delta-linux
        chmod +x ./snyk-delta
        mv ./snyk-delta /usr/local/bin/



    - name: Run Snyk Delta on Changed Files
      run: |
        dnf install -y jq

        # Get the previous commit hash
        PREVIOUS_COMMIT=$(git rev-parse HEAD^1)

        # Get the list of modified files since the previous commit
        git diff --name-only "$PREVIOUS_COMMIT" HEAD > changed_files.txt

        # Filter for relevant files (e.g., project files, lock files)
        grep -E '(\.csproj$|\.sln$|packages\.config$|pom\.xml$|build\.gradle$|requirements\.txt$|package-lock\.json$|yarn\.lock$|Gemfile$|Gemfile\.lock$|\.gemspec$|package-lock\.json$|pom\.xml$|\.jar$|\.war$|build\.gradle$|build\.gradle\.kts$|build\.sbt$|yarn\.lock$|pnpm-lock\.yaml$|package\.json$|Pipfile$|setup\.py$|requirements\.txt$|Gopkg\.lock$|go\.mod$|vendor\.json$|project\.assets\.json$|packages\.config$|project\.json$|paket\.dependencies$|composer\.lock$|Podfile\.lock$|CocoaPods\.podfile\.yaml$|CocoaPods\.podfile$|Podfile$|poetry\.lock$|mix\.exs$|Package\.swift$|pnpm-lock\.yaml$|yarn\.lock$|package-lock\.json$|package\.json$|Gemfile$|Gemfile\.lock$|pom\.xml$|build\.gradle$|build\.gradle\.kts$|build\.sbt$|Pipfile$|requirements\.txt$|Gopkg\.lock$|go\.mod$|vendor/vendor\.json$|obj/project\.assets\.json$|project\.assets\.json$|packages\.config$|paket\.dependencies$|composer\.lock$|Podfile$|Podfile\.lock$|poetry\.lock$|mix\.exs$|mix\.lock$|Package\.swift$)' changed_files.txt > relevant_changed_files.txt

        if [ -s "relevant_changed_files.txt" ]; then
          echo "Running Snyk Delta on the following changed files since commit $PREVIOUS_COMMIT:"
          cat relevant_changed_files.txt
          while IFS= read -r file; do
            echo "Scanning delta for: $file"
            snyk delta --file="$file" --org=${{ secrets.SNYK_ORG_ID }} --base="$PREVIOUS_COMMIT" HEAD
          done < "relevant_changed_files.txt"
        else
          echo "No relevant files changed in this push for Snyk Delta analysis."
        fi
