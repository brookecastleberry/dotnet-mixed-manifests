name: Snyk Scan

on: workflow_dispatch

jobs:
  snyk-sca:
    name: Snyk SCA Scan
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
          fetch-depth: 0  # Fetch full history instead of a single commit
          ref: ${{ github.sha }}  # Checkout the specific commit that triggered the push
          token: ${{ secrets.GITHUB_TOKEN }}

    - uses: actions/setup-node@v4
      with:
          node-version: '20'

    # Uncomment the following steps if necessary for your project dependencies
    # - name: Install libicu dependency
    #   run: |
    #       dnf install -y libicu

    # - name: Setup .NET
    #   uses: actions/setup-dotnet@v3
    #   with:
    #       dotnet-version: '8.0.x'

    # - name: Restore dependencies
    #   run: |
    #       find . -name "*.csproj" -regextype egrep -and -not -regex ".*(T|t)est.*|.*(S|s)imulat.*|.*node_modules.*|.*sample.*|.*code-generators.*|.*(A|a)utomat.*" -exec sh -c 'dotnet restore "$0[...]

    - name: Install Snyk CLI
      run: |
        curl -Lo ./snyk https://static.snyk.io/cli/latest/snyk-linux
        chmod +x ./snyk
        mv ./snyk /usr/local/bin/

    - name: Install snyk-to-html
      run: |
        curl -Lo ./snyk-to-html https://github.com/snyk/snyk-to-html/releases/latest/download/snyk-to-html-linux
        chmod +x ./snyk-to-html
        mv ./snyk-to-html /usr/local/bin/

    - name: SNYK auth
      run: |
        snyk auth ${{secrets.SNYK_API_TOKEN}}

    - name: Install snyk-delta
      run: |
        curl -Lo ./snyk-delta https://github.com/snyk-labs/snyk-delta/releases/latest/download/snyk-delta-linux
        chmod +x ./snyk-delta
        mv ./snyk-delta /usr/local/bin/

    - name: Run Snyk Delta on Changed Files
      run: |
        set -e

        # Fetch the previous commit hash
        PREVIOUS_COMMIT=$(git rev-parse HEAD^1 2>/dev/null)
        if [ -z "$PREVIOUS_COMMIT" ]; then
          echo "Error: Unable to fetch the previous commit. Falling back to initial commit."
          PREVIOUS_COMMIT=$(git rev-list --max-parents=0 HEAD)
        fi

        if [ -z "$PREVIOUS_COMMIT" ]; then
          echo "Error: Failed to determine a valid previous commit. Exiting."
          exit 1
        fi

        echo "Previous Commit: $PREVIOUS_COMMIT"

        # Get the list of modified files
        git diff --name-only "$PREVIOUS_COMMIT" HEAD > changed_files.txt
        echo "Git Diff Output:"
        cat changed_files.txt || true

        # Filter for relevant files (.csproj, .sln, .lock, .json)
        grep -E '\.(csproj|sln|lock|json)$' changed_files.txt > relevant_changed_files.txt || true
        echo "Filtered Relevant Files:"
        cat relevant_changed_files.txt || true

        # Check if there are any relevant files
        if [ -s "relevant_changed_files.txt" ]; then
          while IFS= read -r file; do
            echo "Scanning $file with Snyk Delta..."
            snyk-delta --file="$file" --org=${{secrets.SNYK_ORG_ID}}
            exit_code=$?
            if [ $exit_code -ne 0 ]; then
              echo "Snyk Delta found vulnerabilities or an error occurred for $file. Failing the workflow."
              exit $exit_code
            fi
          done < "relevant_changed_files.txt"
        else
          echo "No relevant files changed. Skipping Snyk Delta scan."
        fi












          if [ -s "relevant_changed_files.txt" ]; then
          while IFS= read -r file; do
            echo "Scanning $file with Snyk Delta..."
            snyk delta --file="$file" --org=${{secrets.SNYK_ORG_ID}}
            exit_code=$?
            if [ $exit_code -ne 0 ]; then
              echo "Snyk Delta found vulnerabilities or an error occurred for $file. Failing the workflow."
              exit $exit_code
            fi
          done < "relevant_changed_files.txt"
        else
          echo "No relevant files changed. Skipping Snyk Delta scan."
        fi







          

