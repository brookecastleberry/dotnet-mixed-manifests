name: Snyk Scan Delta on Changed Files

on: workflow_dispatch
 # Or your default branch

jobs:
  snyk-delta-scan:
    name: Snyk Delta Scan on Changed Manifests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 2 # Needed to compare with the previous commit

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Snyk CLI
        run: |
          curl -Lo ./snyk https://static.snyk.io/cli/latest/snyk-linux
          chmod +x ./snyk
          sudo mv ./snyk /usr/local/bin/

      - name: Install snyk-delta
        run: |
          curl -Lo ./snyk-delta https://github.com/snyk-labs/snyk-delta/releases/latest/download/snyk-delta-linux
          chmod +x ./snyk-delta
          sudo mv ./snyk-delta /usr/local/bin/

      - name: SNYK auth
        run: snyk auth ${{ secrets.SNYK_API_TOKEN }}

      - name: Get changed manifest files
        id: changed_files
        run: |
          PREVIOUS_COMMIT=$(git rev-parse HEAD^1) || PREVIOUS_COMMIT=$(git rev-list --max-parents=0 HEAD)
          echo "PREVIOUS_COMMIT=$PREVIOUS_COMMIT" >> $GITHUB_ENV
          git diff --name-only $PREVIOUS_COMMIT HEAD > changed_files.txt
          cat changed_files.txt

      - name: Filter relevant manifest files
        id: relevant_files
        run: |
          grep -E '\.(csproj|sln|lock|json)$' changed_files.txt > relevant_changed_files.txt
          if [ -s "relevant_changed_files.txt" ]; then
            echo "RELEVANT_FILES=$(cat relevant_changed_files.txt)" >> $GITHUB_OUTPUT
          else
            echo "No relevant manifest files changed."
            echo "RELEVANT_FILES=" >> $GITHUB_OUTPUT
          fi
          cat relevant_changed_files.txt || true

      - name: Run Snyk Test on changed manifest files
        if: steps.relevant_files.outputs.RELEVANT_FILES != ''
        run: |
          set -e
          IFS=$'\n' read -r -d '' FILES <<< "${{ steps.relevant_files.outputs.RELEVANT_FILES }}"
          for file in "$FILES"; do
            echo "Running Snyk Test for: $file"
            snyk test --file="$file" --org="${{ secrets.SNYK_ORG_ID }}"
            echo "---"
          done

      - name: Run Snyk Delta on changed manifest files
        if: steps.relevant_files.outputs.RELEVANT_FILES != ''
        run: |
          set -e
          IFS=$'\n' read -r -d '' FILES <<< "${{ steps.relevant_files.outputs.RELEVANT_FILES }}"
          for file in "$FILES"; do
            echo "Running Snyk Delta for: $file"
            snyk-delta --file="$file" --org="${{ secrets.SNYK_ORG_ID }}" --base="$PREVIOUS_COMMIT" HEAD
            echo "---"
          done
