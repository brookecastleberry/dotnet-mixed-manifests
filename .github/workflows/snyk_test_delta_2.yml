name: Snyk Scan with Curl

on: workflow_dispatch

jobs:
  snyk-sca:
    name: Snyk SCA Scan
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0  # Fetch full history instead of a single commit
        ref: ${{ github.sha }}  # Checkout the specific commit that triggered the push
        token: ${{ secrets.GITHUB_TOKEN }}

    - uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'

    - name: Restore dependencies
      run: |
        find . -name "*.csproj" -exec dotnet restore {} \;

    - name: Install Snyk CLI
      run: |
        curl -Lo ./snyk https://static.snyk.io/cli/latest/snyk-linux
        chmod +x ./snyk
        mv ./snyk /usr/local/bin/

    - name: Install snyk-to-html
      run: |
        curl -Lo ./snyk-to-html https://github.com/snyk/snyk-to-html/releases/latest/download/snyk-to-html-linux
        chmod +x ./snyk-to-html
        mv ./snyk-to-html /usr/local/bin/

    - name: SNYK auth
      run: |
        snyk auth ${{secrets.SNYK_API_TOKEN}}

    - name: Install snyk-delta
      run: |
        curl -Lo snyk-delta https://github.com/snyk-tech-services/snyk-delta/releases/download/v1.12.7/snyk-delta-linux
        chmod +x snyk-delta
        sudo mv snyk-delta /usr/local/bin/
        
    - name: Verify Installation
      run: snyk-delta --version

    - name: Get Changed Files
      id: get_changed_files
      run: |
        # Get the list of modified files
        git diff --name-only HEAD^1 HEAD > changed_files.txt || true

        # Filter for relevant files (.csproj, .sln, .lock, .json)
        grep -E '\.(csproj|sln|lock|json)$' changed_files.txt | grep -v 'invalid.csproj' > relevant_changed_files.txt || true

        echo "Filtered Relevant Files:"
        cat relevant_changed_files.txt || true

        echo "changed_files=$(cat relevant_changed_files.txt)" >> "$GITHUB_OUTPUT"

    - name: Run Snyk Delta on Changed Files
      run: |
        set -e
        CHANGED_FILES=$(echo "${{ steps.get_changed_files.outputs.changed_files }}")
        TARGET_REPO="${{ github.repository }}"
        SNYK_ORG_ID="${{ secrets.SNYK_ORG_ID }}"
        BASELINE_PROJECT_ID="f0a5bb13-e1f6-4d51-8e08-90c39a2b8a82" # Replace with the actual Snyk Project ID of your baseline
        SNYK_BASELINE_ORG_ID="964eae1d-53ee-4e80-a0c5-8b0bb6b262d3"
        TARGET_PROJECT_ID="f9b13c77-b5d6-4ab4-83e7-9b93bd9bf283"

        echo "Snyk Organization ID: $SNYK_ORG_ID"
        echo "Baseline Snyk Project ID (Configured): $BASELINE_PROJECT_ID"

        # Fetch all projects in the Snyk organization
        #echo "Fetching all Snyk projects for org: $SNYK_ORG_ID"
        #ALL_PROJECTS_JSON=$(curl -s -H "Authorization: token ${{ secrets.SNYK_API_TOKEN }}" "https://api.snyk.io/rest/orgs/$SNYK_ORG_ID/projects?limit=1000") # Adjust limit if needed

        if [ -n "$ALL_PROJECTS_JSON" ]; then
          echo "Processing changed files..."
          while IFS= read -r file; do
            echo "Processing file: $file"
            FILE_PATH="$file"
           # #TARGET_PROJECT_ID="" # Initialize

            # Find the Snyk project ID for the current repository
            #POTENTIAL_PROJECT_ID=$(echo "$ALL_PROJECTS_JSON" | jq -r ".data[] | select(.attributes.target.name == \"$TARGET_REPO\") | .id" || true)

            #if [ -n "$POTENTIAL_PROJECT_ID" ]; then
             # TARGET_PROJECT_ID="$POTENTIAL_PROJECT_ID"
             # echo "Found Target Snyk Project ID for repository '$TARGET_REPO': $TARGET_PROJECT_ID"
            #else
             # echo "Warning: Could not find a Snyk project for repository: $TARGET_REPO. Skipping delta for file: $FILE_PATH"
              #continue
            #fi

            if [ -n "$TARGET_PROJECT_ID" ] && [ -n "$BASELINE_PROJECT_ID" ]; then
              echo "Running snyk delta between project ID '$BASELINE_PROJECT_ID' and '$TARGET_PROJECT_ID'"
              snyk-delta --baselineOrg="$SNYK_BASELINE_ORG_ID" --baselineProject="$BASELINE_PROJECT_ID" --currentOrg="$SNYK_ORG_ID" --currentProject="$TARGET_PROJECT_ID"
              echo "-------------------------"
            else
              echo "Warning: Could not determine target or baseline Snyk Project ID for file: $FILE_PATH"
            fi
          done <<< "$CHANGED_FILES"
        else
          echo "Error: Could not fetch Snyk projects."
          exit 1
        fi
